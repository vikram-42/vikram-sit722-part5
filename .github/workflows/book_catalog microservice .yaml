# GitHub Actions workflow for automatic deployment of the Node.js microservice to Kubernetes on push to the main branch.

name: Deploy book_catalog microservice

on:
  # Trigger the workflow on push events to the main branch, only for changes in the inventory_management directory.

  push: 
    branches:
      - main
    paths:
      - book_catalog/**

# Allow manual workflow runs via GitHub Actions UI.

  workflow_dispatch: 

jobs:

  deploy:
    runs-on: ubuntu-latest
    
    env:
      VERSION: ${{ github.sha }}
      CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
      REGISTRY_UN: ${{ secrets.REGISTRY_UN }}
      REGISTRY_PW: ${{ secrets.REGISTRY_PW  }}
      DATABASE_URL: ${{ secrets.DATABASE_URL  }}
      NAME: deakin-library
      DIRECTORY: book_catalog

    steps:
      
      # Check-out your repository under $GITHUB_WORKSPACE.
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up permissions for scripts
      - name: Set permissions for build script
        run: chmod +x ./scripts/build-image.sh

      - name: Set permissions for push-image script
        run: chmod +x ./scripts/push-image.sh

      - name: Set permissions for deploy script
        run: chmod +x ./scripts/deploy.sh

      #
      # Build the Docker image.
      #
      - name: Build Docker image
        run: |
          set -e
          ./scripts/build-image.sh

      #
      # Push the Docker image to the container registry.
      #
      - name: Push Docker image
        run: |
          set -e
          ./scripts/push-image.sh

      #
      # Install Kubectl and configure it to access the Kubernetes cluster.
      #
      - name: Install and configure kubectl
        uses: tale/kubectl-action@v1
        with:
          base64-kube-config: ${{ secrets.KUBE_CONFIG }}
          kubectl-version: v1.24.2
      
      #
      # Expand the Kubernetes deployment template and deploy the service.
      #
      - name: Deploy to Kubernetes
        run: |
          set -e
          ./scripts/deploy.sh
